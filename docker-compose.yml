services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: career_growth_postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-career_growth_insights}
      POSTGRES_USER: ${POSTGRES_USER:-career_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-DitumSecure2024!}
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --locale=C"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/01-init.sql:ro
    ports:
      - "127.0.0.1:5432:5432"
    networks:
      - career_growth_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-career_user} -d ${POSTGRES_DB:-career_growth_insights}"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 30s

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: career_growth_backend
    restart: unless-stopped
    env_file:
      - ./backend/.env
    environment:
      # Docker-specific overrides БЕЗ SSL
      - DATABASE_URL=postgresql://${POSTGRES_USER:-career_user}:${POSTGRES_PASSWORD:-DitumSecure2024!}@postgres:5432/${POSTGRES_DB:-career_growth_insights}?sslmode=disable
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_SSL=false
      - PGSSL=false
      - PGSSLMODE=disable
      - FRONTEND_URL=${FRONTEND_URL:-http://localhost}
      - NODE_ENV=${NODE_ENV:-development}
    volumes:
      - backend_uploads:/app/uploads
      - backend_logs:/app/logs
    ports:
      - "127.0.0.1:5000:5000"  # Backend остается внутренним
    networks:
      - career_growth_network
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:5000/health"]
      interval: 30s
      timeout: 15s
      retries: 5
      start_period: 60s

  # Frontend React App БЕЗ SSL
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        - VITE_API_URL=${VITE_API_URL:-http://localhost/api}
        - VITE_APP_NAME=${VITE_APP_NAME:-Career Growth Insights}
        - VITE_APP_DOMAIN=${VITE_APP_DOMAIN:-localhost}
    container_name: career_growth_frontend
    restart: unless-stopped
    ports:
      - "80:80"        # HTTP основной порт
    networks:
      - career_growth_network
    depends_on:
      backend:
        condition: service_started
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:80/nginx-health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
    driver: local
  backend_uploads:
    driver: local
  backend_logs:
    driver: local

networks:
  career_growth_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.21.0.0/16