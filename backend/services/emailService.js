// services/emailService.js
const nodemailer = require('nodemailer');
const handlebars = require('handlebars');

class EmailService {
  constructor() {
    this.transporter = null;
    this.initTransporter();
  }

  initTransporter() {
    // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –¥–ª—è —Å–µ—Ä–≤–µ—Ä–∞ ditum.kz
    const smtpConfig = {
      host: process.env.SMTP_HOST || 'smtp.gmail.com',
      port: parseInt(process.env.SMTP_PORT) || 587,
      secure: process.env.SMTP_SECURE === 'true' || false,
      auth: {
        user: process.env.SMTP_USER,
        pass: process.env.SMTP_PASSWORD
      },
      // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
      tls: {
        rejectUnauthorized: false // –î–ª—è —Å–∞–º–æ–ø–æ–¥–ø–∏—Å–∞–Ω–Ω—ã—Ö —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤
      },
      debug: process.env.NODE_ENV === 'development', // –õ–æ–≥–∏ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
      logger: process.env.NODE_ENV === 'development'
    };

    console.log(`Initializing email service with host: ${smtpConfig.host}:${smtpConfig.port}`);

    this.transporter = nodemailer.createTransporter(smtpConfig);
  }

  // –ù–æ–≤—ã–π –º–µ—Ç–æ–¥ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è –Ω–∞ —Ç–µ—Å—Ç
  async sendTestInvitation(testData) {
    try {
      const { userEmail, testLink, projectName, coachName } = testData;

      const emailTemplate = `
        <!DOCTYPE html>
        <html>
        <head>
          <meta charset="utf-8">
          <meta name="viewport" content="width=device-width, initial-scale=1.0">
          <title>–ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –Ω–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ</title>
        </head>
        <body style="margin: 0; padding: 0; font-family: Arial, sans-serif; background-color: #f5f5f5;">
          <div style="max-width: 600px; margin: 0 auto; background-color: white;">
            <!-- Header -->
            <div style="background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); padding: 30px; text-align: center;">
              <h1 style="color: white; margin: 0; font-size: 24px;">–ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –Ω–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ</h1>
              <p style="color: #e8f4f8; margin: 10px 0 0 0; font-size: 14px;">Career Growth Insights</p>
            </div>
            
            <!-- Main Content -->
            <div style="padding: 30px;">
              <h2 style="color: #333; margin: 0 0 20px 0;">–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ!</h2>
              
              <p style="font-size: 16px; line-height: 1.6; color: #555; margin-bottom: 20px;">
                –í—ã –ø—Ä–∏–≥–ª–∞—à–µ–Ω—ã –ø—Ä–æ–π—Ç–∏ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ —Ä–∞–º–∫–∞—Ö –ø—Ä–æ–µ–∫—Ç–∞ <strong>"${projectName}"</strong>.
              </p>
              
              <!-- Test Info Box -->
              <div style="background: #f8f9fa; padding: 20px; border-radius: 8px; margin: 20px 0; border-left: 4px solid #667eea;">
                <h3 style="margin: 0 0 15px 0; color: #333; font-size: 18px;">üìä –û —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏:</h3>
                <ul style="margin: 0; padding-left: 20px; color: #555; line-height: 1.8;">
                  <li><strong>–í—Ä–µ–º—è –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è:</strong> 15-20 –º–∏–Ω—É—Ç</li>
                  <li><strong>–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–æ–ø—Ä–æ—Å–æ–≤:</strong> 40</li>
                  <li><strong>–†–µ–∑—É–ª—å—Ç–∞—Ç:</strong> –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π PDF-–æ—Ç—á–µ—Ç</li>
                  <li><strong>–Ø–∑—ã–∫:</strong> —Ä—É—Å—Å–∫–∏–π</li>
                </ul>
              </div>
              
              <!-- CTA Button -->
              <div style="text-align: center; margin: 30px 0;">
                <a href="${testLink}" style="display: inline-block; background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); color: white; padding: 15px 30px; text-decoration: none; border-radius: 25px; font-weight: bold; font-size: 16px; box-shadow: 0 4px 15px rgba(102, 126, 234, 0.3);">
                  üöÄ –ü—Ä–æ–π—Ç–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
                </a>
              </div>
              
              <!-- Link Fallback -->
              <div style="background: #fff3cd; border: 1px solid #ffeaa7; border-radius: 8px; padding: 15px; margin: 20px 0;">
                <p style="margin: 0; font-size: 14px; color: #856404;">
                  <strong>–ï—Å–ª–∏ –∫–Ω–æ–ø–∫–∞ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç,</strong> —Å–∫–æ–ø–∏—Ä—É–π—Ç–µ –∏ –≤—Å—Ç–∞–≤—å—Ç–µ —ç—Ç—É —Å—Å—ã–ª–∫—É –≤ –±—Ä–∞—É–∑–µ—Ä:
                </p>
                <p style="margin: 10px 0 0 0; word-break: break-all;">
                  <a href="${testLink}" style="color: #667eea; text-decoration: none;">${testLink}</a>
                </p>
              </div>
              
              <!-- Features -->
              <div style="margin: 30px 0;">
                <h3 style="color: #333; margin-bottom: 15px;">‚ú® –û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:</h3>
                <div style="display: table; width: 100%;">
                  <div style="display: table-row;">
                    <div style="display: table-cell; padding: 10px; width: 50%;">
                      <div style="background: #e8f4f8; padding: 15px; border-radius: 8px; text-align: center;">
                        <div style="font-size: 24px; margin-bottom: 5px;">üíæ</div>
                        <strong style="color: #333;">–ê–≤—Ç–æ—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ</strong>
                        <p style="margin: 5px 0 0 0; font-size: 12px; color: #666;">–ü—Ä–æ–≥—Ä–µ—Å—Å —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏</p>
                      </div>
                    </div>
                    <div style="display: table-cell; padding: 10px; width: 50%;">
                      <div style="background: #fff0e6; padding: 15px; border-radius: 8px; text-align: center;">
                        <div style="font-size: 24px; margin-bottom: 5px;">üìã</div>
                        <strong style="color: #333;">PDF –æ—Ç—á–µ—Ç</strong>
                        <p style="margin: 5px 0 0 0; font-size: 12px; color: #666;">–î–µ—Ç–∞–ª—å–Ω—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã</p>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
              
              <!-- Important Notice -->
              <div style="background: #d1ecf1; border: 1px solid #bee5eb; border-radius: 8px; padding: 15px; margin: 20px 0;">
                <p style="margin: 0; font-size: 14px; color: #0c5460;">
                  <strong>üí° –í–∞–∂–Ω–æ:</strong> –í–∞—à –ø—Ä–æ–≥—Ä–µ—Å—Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è –∫–∞–∂–¥—ã–µ 30 —Å–µ–∫—É–Ω–¥. 
                  –ï—Å–ª–∏ –≤—ã –ø—Ä–µ—Ä–≤–µ—Ç–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ, –≤—ã —Å–º–æ–∂–µ—Ç–µ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –ø–æ–∑–∂–µ, –ø–µ—Ä–µ–π–¥—è –ø–æ —Ç–æ–π –∂–µ —Å—Å—ã–ª–∫–µ.
                </p>
              </div>
              
              ${coachName ? `
              <p style="font-size: 14px; color: #777; margin-top: 30px;">
                –ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ: <strong>${coachName}</strong>
              </p>
              ` : ''}
            </div>
            
            <!-- Footer -->
            <div style="background: #f8f9fa; padding: 20px; text-align: center; border-top: 1px solid #dee2e6;">
              <p style="margin: 0; color: #777; font-size: 12px;">¬© 2024 ${process.env.COMPANY_NAME || 'Ditum'}</p>
              <p style="margin: 5px 0 0 0; color: #777; font-size: 12px;">
                –ü–æ–¥–¥–µ—Ä–∂–∫–∞: <a href="mailto:${process.env.SUPPORT_EMAIL}" style="color: #667eea; text-decoration: none;">${process.env.SUPPORT_EMAIL}</a>
              </p>
              <p style="margin: 5px 0 0 0; color: #777; font-size: 12px;">
                –ü–ª–∞—Ç—Ñ–æ—Ä–º–∞: <a href="https://ditum.kz" style="color: #667eea; text-decoration: none;">ditum.kz</a>
              </p>
            </div>
          </div>
        </body>
        </html>
      `;

      const mailOptions = {
        from: {
          name: process.env.FROM_NAME || 'Ditum Career Testing',
          address: process.env.FROM_EMAIL || process.env.SMTP_USER
        },
        to: userEmail,
        subject: `–ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –Ω–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ - ${projectName}`,
        html: emailTemplate
      };

      const result = await this.transporter.sendMail(mailOptions);
      console.log('‚úÖ Test invitation sent successfully to:', userEmail, 'MessageId:', result.messageId);
      return result;

    } catch (error) {
      console.error('‚ùå Failed to send test invitation to:', testData.userEmail, error);
      throw error;
    }
  }

  async sendTestReport(reportData, pdfBuffer) {
    const { userInfo, testInfo, reportId } = reportData;

    try {
      const emailTemplate = this.getReportEmailTemplate();
      const compiledTemplate = handlebars.compile(emailTemplate);

      const htmlContent = compiledTemplate({
        userName: `${userInfo.firstName} ${userInfo.lastName}`,
        projectName: testInfo.projectName,
        testDate: new Date().toLocaleDateString('ru-RU', {
          year: 'numeric',
          month: 'long',
          day: 'numeric'
        }),
        reportId,
        supportEmail: process.env.SUPPORT_EMAIL || process.env.SMTP_USER,
        platformName: process.env.PLATFORM_NAME || 'Ditum Career Testing'
      });

      const mailOptions = {
        from: {
          name: process.env.FROM_NAME || 'Ditum Career Testing',
          address: process.env.FROM_EMAIL || process.env.SMTP_USER
        },
        to: userInfo.email,
        subject: `–†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è - ${testInfo.projectName}`,
        html: htmlContent,
        attachments: pdfBuffer ? [{
          filename: `–û—Ç—á–µ—Ç_${userInfo.firstName}_${userInfo.lastName}_${reportId}.pdf`,
          content: pdfBuffer,
          contentType: 'application/pdf'
        }] : []
      };

      const result = await this.transporter.sendMail(mailOptions);
      console.log('‚úÖ Test report sent successfully:', result.messageId);
      return result;

    } catch (error) {
      console.error('‚ùå Failed to send test report:', error);
      throw error;
    }
  }

  // –ú–µ—Ç–æ–¥ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∫–æ—É—á—É –æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ —Ç–µ—Å—Ç–∞
  async sendCoachNotification(notificationData) {
    try {
      const { coachEmail, userName, projectName, reportUrl, dashboardUrl } = notificationData;

      const emailTemplate = this.getCoachNotificationTemplate();
      const compiledTemplate = handlebars.compile(emailTemplate);

      const htmlContent = compiledTemplate({
        userName,
        projectName,
        reportUrl,
        dashboardUrl,
        platformName: process.env.PLATFORM_NAME || 'Ditum Career Testing',
        supportEmail: process.env.SUPPORT_EMAIL || process.env.SMTP_USER
      });

      const mailOptions = {
        from: {
          name: process.env.FROM_NAME || 'Ditum Career Testing',
          address: process.env.FROM_EMAIL || process.env.SMTP_USER
        },
        to: coachEmail,
        subject: `–¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω - ${userName} (${projectName})`,
        html: htmlContent
      };

      const result = await this.transporter.sendMail(mailOptions);
      console.log('‚úÖ Coach notification sent successfully:', result.messageId);
      return result;

    } catch (error) {
      console.error('‚ùå Failed to send coach notification:', error);
      throw error;
    }
  }

  getCoachNotificationTemplate() {
    return `
<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>–¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω</title>
    <style>
        .container { max-width: 600px; margin: 0 auto; font-family: Arial, sans-serif; }
        .header { background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); color: white; padding: 30px; text-align: center; }
        .content { padding: 30px; background: white; }
        .button { display: inline-block; background: #667eea; color: white; padding: 12px 24px; text-decoration: none; border-radius: 5px; margin: 5px; }
        .stats { display: flex; justify-content: space-around; margin: 20px 0; }
        .stat { text-align: center; padding: 15px; background: #f8f9fa; border-radius: 8px; margin: 0 5px; }
        .footer { background: #f8f9fa; padding: 20px; text-align: center; color: #777; font-size: 12px; }
        .info-box { background: #d1ecf1; border-left: 4px solid #bee5eb; padding: 15px; margin: 20px 0; }
    </style>
</head>
<body>
    <div class="container">
        <div class="header">
            <h1>‚úÖ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω!</h1>
            <p>–£—á–∞—Å—Ç–Ω–∏–∫: {{userName}}</p>
        </div>
        
        <div class="content">
            <h2>üéâ –û—Ç–ª–∏—á–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–∏!</h2>
            <p>–£—á–∞—Å—Ç–Ω–∏–∫ <strong>{{userName}}</strong> —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–∏–ª —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ —Ä–∞–º–∫–∞—Ö –ø—Ä–æ–µ–∫—Ç–∞ "<strong>{{projectName}}</strong>".</p>
            
            <div class="stats">
                <div class="stat">
                    <h4>üìä –û—Ç—á–µ—Ç</h4>
                    <p>–ì–æ—Ç–æ–≤ –∫ –ø—Ä–æ—Å–º–æ—Ç—Ä—É</p>
                </div>
                <div class="stat">
                    <h4>üìß Email</h4>
                    <p>–û—Ç–ø—Ä–∞–≤–ª–µ–Ω —É—á–∞—Å—Ç–Ω–∏–∫—É</p>
                </div>
                <div class="stat">
                    <h4>üîÑ –°—Ç–∞—Ç—É—Å</h4>
                    <p>–ó–∞–≤–µ—Ä—à–µ–Ω</p>
                </div>
            </div>
            
            <div style="text-align: center;">
                <a href="{{reportUrl}}" class="button">üìã –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –æ—Ç—á–µ—Ç</a>
                <a href="{{dashboardUrl}}" class="button">üè† –ü–µ—Ä–µ–π—Ç–∏ –≤ –ø–∞–Ω–µ–ª—å</a>
            </div>
            
            <h3>üìà –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏</h3>
            <ol>
                <li>–ü—Ä–æ—Å–º–æ—Ç—Ä–∏—Ç–µ –¥–µ—Ç–∞–ª—å–Ω—ã–π –æ—Ç—á–µ—Ç —É—á–∞—Å—Ç–Ω–∏–∫–∞</li>
                <li>–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –∏ –æ–±–ª–∞—Å—Ç–∏ —Ä–∞–∑–≤–∏—Ç–∏—è</li>
                <li>–ó–∞–ø–ª–∞–Ω–∏—Ä—É–π—Ç–µ —Å–µ—Å—Å–∏—é –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏</li>
                <li>–°–æ—Å—Ç–∞–≤—å—Ç–µ –ø–ª–∞–Ω —Ä–∞–∑–≤–∏—Ç–∏—è –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤</li>
            </ol>
            
            <div class="info-box">
                <h3>üí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏</h3>
                <p>–î–ª—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –æ–±—Å—É–¥–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å —É—á–∞—Å—Ç–Ω–∏–∫–æ–º –≤ —Ç–µ—á–µ–Ω–∏–µ –Ω–µ–¥–µ–ª–∏ –ø–æ—Å–ª–µ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è —Ç–µ—Å—Ç–∞, –ø–æ–∫–∞ –≤–ø–µ—á–∞—Ç–ª–µ–Ω–∏—è –µ—â–µ —Å–≤–µ–∂–∏.</p>
            </div>
        </div>
        
        <div class="footer">
            <p>–≠—Ç–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç {{platformName}}.</p>
            <p>üìß –ü–æ–¥–¥–µ—Ä–∂–∫–∞: {{supportEmail}}</p>
            <p>¬© 2024 {{platformName}} | ditum.kz</p>
        </div>
    </div>
</body>
</html>
    `;
  }

  getReportEmailTemplate() {
    return `
<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>–†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è</title>
    <style>
        .container { max-width: 600px; margin: 0 auto; font-family: Arial, sans-serif; }
        .header { background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); color: white; padding: 30px; text-align: center; }
        .content { padding: 30px; background: white; }
        .button { display: inline-block; background: #667eea; color: white; padding: 12px 24px; text-decoration: none; border-radius: 5px; }
        .footer { background: #f8f9fa; padding: 20px; text-align: center; color: #777; font-size: 12px; }
    </style>
</head>
<body>
    <div class="container">
        <div class="header">
            <h1>üéâ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –≥–æ—Ç–æ–≤—ã!</h1>
            <p>{{userName}}</p>
        </div>
        
        <div class="content">
            <h2>–°–ø–∞—Å–∏–±–æ –∑–∞ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è!</h2>
            <p>–í–∞—à–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ –ø—Ä–æ–µ–∫—Ç—É "<strong>{{projectName}}</strong>" –≥–æ—Ç–æ–≤—ã –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞.</p>
            
            <p><strong>–î–∞—Ç–∞ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è:</strong> {{testDate}}</p>
            <p><strong>ID –æ—Ç—á–µ—Ç–∞:</strong> {{reportId}}</p>
            
            <div style="text-align: center; margin: 30px 0;">
                <a href="#" class="button">üìã –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –æ—Ç—á–µ—Ç</a>
            </div>
            
            <p>–í–∞—à –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –æ—Ç—á–µ—Ç —Å–æ–¥–µ—Ä–∂–∏—Ç –¥–µ—Ç–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –∫–æ–º–ø–µ—Ç–µ–Ω—Ü–∏–π –∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ —Ä–∞–∑–≤–∏—Ç–∏—é.</p>
        </div>
        
        <div class="footer">
            <p>–° —É–≤–∞–∂–µ–Ω–∏–µ–º, –∫–æ–º–∞–Ω–¥–∞ {{platformName}}</p>
            <p>üìß –ü–æ–¥–¥–µ—Ä–∂–∫–∞: {{supportEmail}}</p>
        </div>
    </div>
</body>
</html>
    `;
  }

  // –ú–µ—Ç–æ–¥ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–∏—Å—å–º–∞
  async sendTestEmail(recipientEmail = 'test@example.com') {
    try {
      const mailOptions = {
        from: {
          name: process.env.FROM_NAME || 'Ditum Career Testing',
          address: process.env.FROM_EMAIL || process.env.SMTP_USER
        },
        to: recipientEmail,
        subject: '–¢–µ—Å—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏ email - Ditum Career Testing',
        html: `
          <h1>‚úÖ Email —Å–µ—Ä–≤–∏—Å —Ä–∞–±–æ—Ç–∞–µ—Ç!</h1>
          <p>–≠—Ç–æ —Ç–µ—Å—Ç–æ–≤–æ–µ –ø–∏—Å—å–º–æ –æ—Ç –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã Ditum Career Testing.</p>
          <p>–í—Ä–µ–º—è –æ—Ç–ø—Ä–∞–≤–∫–∏: ${new Date().toLocaleString('ru-RU')}</p>
          <p>–°–µ—Ä–≤–µ—Ä: ${process.env.SMTP_HOST || '–Ω–µ —É–∫–∞–∑–∞–Ω'}</p>
        `
      };

      const result = await this.transporter.sendMail(mailOptions);
      console.log('‚úÖ Test email sent successfully:', result.messageId);
      return result;

    } catch (error) {
      console.error('‚ùå Failed to send test email:', error);
      throw error;
    }
  }

  async testConnection() {
    try {
      console.log('Testing email service connection...');
      await this.transporter.verify();
      console.log('‚úÖ Email service connection verified successfully');
      return true;
    } catch (error) {
      console.error('‚ùå Email service connection failed:', error.message);
      console.error('SMTP Config:', {
        host: process.env.SMTP_HOST,
        port: process.env.SMTP_PORT,
        secure: process.env.SMTP_SECURE,
        user: process.env.SMTP_USER ? process.env.SMTP_USER.replace(/(.{3}).*(@.*)/, '$1***$2') : 'not set'
      });
      return false;
    }
  }
}

module.exports = new EmailService();