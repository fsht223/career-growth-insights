# NGINX конфигурация для ditum.kz с SSL

# Редирект с HTTP на HTTPS
server {
    listen 80;
    server_name ditum.kz www.ditum.kz localhost;

    # Для получения SSL сертификата (Let's Encrypt)
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    # Редирект всего остального на HTTPS
    location / {
        return 301 https://$host$request_uri;
    }
}

# HTTPS сервер
server {
    listen 443 ssl http2;
    server_name ditum.kz www.ditum.kz localhost;
    root /usr/share/nginx/html;
    index index.html;

    # SSL конфигурация
    ssl_certificate /etc/ssl/certs/ditum.kz.crt;
    ssl_certificate_key /etc/ssl/certs/ditum.kz.key;

    # Современные SSL настройки
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;

    # Логирование
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log warn;

    # Основные настройки
    client_max_body_size 10M;
    client_body_timeout 60s;
    client_header_timeout 60s;

    # Gzip сжатие
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/javascript
        application/xml+rss
        application/json
        image/svg+xml
        font/truetype
        font/opentype
        application/vnd.ms-fontobject;

    # Заголовки безопасности
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self' https://ditum.kz wss://ditum.kz;" always;

    # React Router - все маршруты идут на index.html
    location / {
        try_files $uri $uri/ /index.html;
        expires 1h;
        add_header Cache-Control "public, must-revalidate";
    }

    # API проксирование к backend
    location /api/ {
        proxy_pass http://career_growth_backend:5000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_cache_bypass $http_upgrade;

        # Timeout настройки
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;

        # Буферизация
        proxy_buffering on;
        proxy_buffer_size 8k;
        proxy_buffers 16 8k;
        proxy_busy_buffers_size 16k;
    }

    # Health check endpoint
    location /health {
        proxy_pass http://career_growth_backend:5000/health;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        access_log off;
    }

    # Кэширование статических ресурсов
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot|webp)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header Vary "Accept-Encoding";
        gzip_static on;
    }

    # Специальная обработка для шрифтов
    location ~* \.(woff|woff2)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header Access-Control-Allow-Origin "*";
        add_header Access-Control-Allow-Methods "GET, OPTIONS";
        add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range";
    }

    # Обработка manifest.json и service worker
    location ~* \/(manifest\.json|sw\.js|workbox-.*)$ {
        expires 1h;
        add_header Cache-Control "public, must-revalidate";
    }

    # Безопасность - скрытие служебных файлов
    location ~ /\.(ht|git|env) {
        deny all;
        access_log off;
        log_not_found off;
    }

    # Ограничение на размер загружаемых файлов
    location /api/upload {
        proxy_pass http://career_growth_backend:5000;
        client_max_body_size 50M;
        proxy_request_buffering off;
    }

    # Обработка ошибок
    error_page 404 /index.html;
    error_page 500 502 503 504 /50x.html;

    location = /50x.html {
        root /usr/share/nginx/html;
        internal;
    }
}

# Fallback сервер для HTTP (если SSL еще не настроен)
server {
    listen 80 default_server;
    server_name _;
    root /usr/share/nginx/html;
    index index.html;

    # Все настройки как в HTTPS версии, но без SSL
    location / {
        try_files $uri $uri/ /index.html;
    }

    location /api/ {
        proxy_pass http://career_growth_backend:5000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /health {
        proxy_pass http://career_growth_backend:5000/health;
        access_log off;
    }
}